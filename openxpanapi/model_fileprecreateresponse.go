/*
xpan

xpanapi

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Fileprecreateresponse struct for Fileprecreateresponse
type Fileprecreateresponse struct {
	Uploadid   *string   `json:"uploadid,omitempty"`
	ReturnType *int32    `json:"return_type,omitempty"`
	BlockList  *[]string `json:"block_list,omitempty"`
	Errno      *int32    `json:"errno,omitempty"`
	RequestId  *int64    `json:"request_id,omitempty"`
}

// NewFileprecreateresponse instantiates a new Fileprecreateresponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileprecreateresponse() *Fileprecreateresponse {
	this := Fileprecreateresponse{}
	return &this
}

// NewFileprecreateresponseWithDefaults instantiates a new Fileprecreateresponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileprecreateresponseWithDefaults() *Fileprecreateresponse {
	this := Fileprecreateresponse{}
	return &this
}

// GetUploadid returns the Uploadid field value if set, zero value otherwise.
func (o *Fileprecreateresponse) GetUploadid() string {
	if o == nil || o.Uploadid == nil {
		var ret string
		return ret
	}
	return *o.Uploadid
}

// GetUploadidOk returns a tuple with the Uploadid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fileprecreateresponse) GetUploadidOk() (*string, bool) {
	if o == nil || o.Uploadid == nil {
		return nil, false
	}
	return o.Uploadid, true
}

// HasUploadid returns a boolean if a field has been set.
func (o *Fileprecreateresponse) HasUploadid() bool {
	if o != nil && o.Uploadid != nil {
		return true
	}

	return false
}

// SetUploadid gets a reference to the given string and assigns it to the Uploadid field.
func (o *Fileprecreateresponse) SetUploadid(v string) {
	o.Uploadid = &v
}

// GetReturnType returns the ReturnType field value if set, zero value otherwise.
func (o *Fileprecreateresponse) GetReturnType() int32 {
	if o == nil || o.ReturnType == nil {
		var ret int32
		return ret
	}
	return *o.ReturnType
}

// GetReturnTypeOk returns a tuple with the ReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fileprecreateresponse) GetReturnTypeOk() (*int32, bool) {
	if o == nil || o.ReturnType == nil {
		return nil, false
	}
	return o.ReturnType, true
}

// HasReturnType returns a boolean if a field has been set.
func (o *Fileprecreateresponse) HasReturnType() bool {
	if o != nil && o.ReturnType != nil {
		return true
	}

	return false
}

// SetReturnType gets a reference to the given int32 and assigns it to the ReturnType field.
func (o *Fileprecreateresponse) SetReturnType(v int32) {
	o.ReturnType = &v
}

// GetBlockList returns the BlockList field value if set, zero value otherwise.
func (o *Fileprecreateresponse) GetBlockList() []string {
	if o == nil || o.BlockList == nil {
		var ret []string
		return ret
	}
	return *o.BlockList
}

// GetBlockListOk returns a tuple with the BlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fileprecreateresponse) GetBlockListOk() (*[]string, bool) {
	if o == nil || o.BlockList == nil {
		return nil, false
	}
	return o.BlockList, true
}

// HasBlockList returns a boolean if a field has been set.
func (o *Fileprecreateresponse) HasBlockList() bool {
	if o != nil && o.BlockList != nil {
		return true
	}

	return false
}

// SetBlockList gets a reference to the given []string and assigns it to the BlockList field.
func (o *Fileprecreateresponse) SetBlockList(v []string) {
	o.BlockList = &v
}

// GetErrno returns the Errno field value if set, zero value otherwise.
func (o *Fileprecreateresponse) GetErrno() int32 {
	if o == nil || o.Errno == nil {
		var ret int32
		return ret
	}
	return *o.Errno
}

// GetErrnoOk returns a tuple with the Errno field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fileprecreateresponse) GetErrnoOk() (*int32, bool) {
	if o == nil || o.Errno == nil {
		return nil, false
	}
	return o.Errno, true
}

// HasErrno returns a boolean if a field has been set.
func (o *Fileprecreateresponse) HasErrno() bool {
	if o != nil && o.Errno != nil {
		return true
	}

	return false
}

// SetErrno gets a reference to the given int32 and assigns it to the Errno field.
func (o *Fileprecreateresponse) SetErrno(v int32) {
	o.Errno = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *Fileprecreateresponse) GetRequestId() int64 {
	if o == nil || o.RequestId == nil {
		var ret int64
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fileprecreateresponse) GetRequestIdOk() (*int64, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *Fileprecreateresponse) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given int64 and assigns it to the RequestId field.
func (o *Fileprecreateresponse) SetRequestId(v int64) {
	o.RequestId = &v
}

func (o Fileprecreateresponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uploadid != nil {
		toSerialize["uploadid"] = o.Uploadid
	}
	if o.ReturnType != nil {
		toSerialize["return_type"] = o.ReturnType
	}
	if o.BlockList != nil {
		toSerialize["block_list"] = o.BlockList
	}
	if o.Errno != nil {
		toSerialize["errno"] = o.Errno
	}
	if o.RequestId != nil {
		toSerialize["request_id"] = o.RequestId
	}
	return json.Marshal(toSerialize)
}

type NullableFileprecreateresponse struct {
	value *Fileprecreateresponse
	isSet bool
}

func (v NullableFileprecreateresponse) Get() *Fileprecreateresponse {
	return v.value
}

func (v *NullableFileprecreateresponse) Set(val *Fileprecreateresponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFileprecreateresponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFileprecreateresponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileprecreateresponse(val *Fileprecreateresponse) *NullableFileprecreateresponse {
	return &NullableFileprecreateresponse{value: val, isSet: true}
}

func (v NullableFileprecreateresponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileprecreateresponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
