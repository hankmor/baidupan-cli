/*
xpan

xpanapi

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Filecreateresponse struct for Filecreateresponse
type Filecreateresponse struct {
	Category       *int32  `json:"category,omitempty"`
	Ctime          *int32  `json:"ctime,omitempty"`
	FromType       *int32  `json:"from_type,omitempty"`
	FsId           *int64  `json:"fs_id,omitempty"`
	Isdir          *int32  `json:"isdir,omitempty"`
	Md5            *string `json:"md5,omitempty"`
	Mtime          *int32  `json:"mtime,omitempty"`
	Path           *string `json:"path,omitempty"`
	ServerFilename *string `json:"server_filename,omitempty"`
	Size           *int32  `json:"size,omitempty"`
	Errno          *int32  `json:"errno,omitempty"`
	Name           *string `json:"name,omitempty"`
}

// NewFilecreateresponse instantiates a new Filecreateresponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilecreateresponse() *Filecreateresponse {
	this := Filecreateresponse{}
	return &this
}

// NewFilecreateresponseWithDefaults instantiates a new Filecreateresponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilecreateresponseWithDefaults() *Filecreateresponse {
	this := Filecreateresponse{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *Filecreateresponse) GetCategory() int32 {
	if o == nil || o.Category == nil {
		var ret int32
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetCategoryOk() (*int32, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *Filecreateresponse) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given int32 and assigns it to the Category field.
func (o *Filecreateresponse) SetCategory(v int32) {
	o.Category = &v
}

// GetCtime returns the Ctime field value if set, zero value otherwise.
func (o *Filecreateresponse) GetCtime() int32 {
	if o == nil || o.Ctime == nil {
		var ret int32
		return ret
	}
	return *o.Ctime
}

// GetCtimeOk returns a tuple with the Ctime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetCtimeOk() (*int32, bool) {
	if o == nil || o.Ctime == nil {
		return nil, false
	}
	return o.Ctime, true
}

// HasCtime returns a boolean if a field has been set.
func (o *Filecreateresponse) HasCtime() bool {
	if o != nil && o.Ctime != nil {
		return true
	}

	return false
}

// SetCtime gets a reference to the given int32 and assigns it to the Ctime field.
func (o *Filecreateresponse) SetCtime(v int32) {
	o.Ctime = &v
}

// GetFromType returns the FromType field value if set, zero value otherwise.
func (o *Filecreateresponse) GetFromType() int32 {
	if o == nil || o.FromType == nil {
		var ret int32
		return ret
	}
	return *o.FromType
}

// GetFromTypeOk returns a tuple with the FromType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetFromTypeOk() (*int32, bool) {
	if o == nil || o.FromType == nil {
		return nil, false
	}
	return o.FromType, true
}

// HasFromType returns a boolean if a field has been set.
func (o *Filecreateresponse) HasFromType() bool {
	if o != nil && o.FromType != nil {
		return true
	}

	return false
}

// SetFromType gets a reference to the given int32 and assigns it to the FromType field.
func (o *Filecreateresponse) SetFromType(v int32) {
	o.FromType = &v
}

// GetFsId returns the FsId field value if set, zero value otherwise.
func (o *Filecreateresponse) GetFsId() int64 {
	if o == nil || o.FsId == nil {
		var ret int64
		return ret
	}
	return *o.FsId
}

// GetFsIdOk returns a tuple with the FsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetFsIdOk() (*int64, bool) {
	if o == nil || o.FsId == nil {
		return nil, false
	}
	return o.FsId, true
}

// HasFsId returns a boolean if a field has been set.
func (o *Filecreateresponse) HasFsId() bool {
	if o != nil && o.FsId != nil {
		return true
	}

	return false
}

// SetFsId gets a reference to the given int64 and assigns it to the FsId field.
func (o *Filecreateresponse) SetFsId(v int64) {
	o.FsId = &v
}

// GetIsdir returns the Isdir field value if set, zero value otherwise.
func (o *Filecreateresponse) GetIsdir() int32 {
	if o == nil || o.Isdir == nil {
		var ret int32
		return ret
	}
	return *o.Isdir
}

// GetIsdirOk returns a tuple with the Isdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetIsdirOk() (*int32, bool) {
	if o == nil || o.Isdir == nil {
		return nil, false
	}
	return o.Isdir, true
}

// HasIsdir returns a boolean if a field has been set.
func (o *Filecreateresponse) HasIsdir() bool {
	if o != nil && o.Isdir != nil {
		return true
	}

	return false
}

// SetIsdir gets a reference to the given int32 and assigns it to the Isdir field.
func (o *Filecreateresponse) SetIsdir(v int32) {
	o.Isdir = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *Filecreateresponse) GetMd5() string {
	if o == nil || o.Md5 == nil {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetMd5Ok() (*string, bool) {
	if o == nil || o.Md5 == nil {
		return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *Filecreateresponse) HasMd5() bool {
	if o != nil && o.Md5 != nil {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *Filecreateresponse) SetMd5(v string) {
	o.Md5 = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *Filecreateresponse) GetMtime() int32 {
	if o == nil || o.Mtime == nil {
		var ret int32
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetMtimeOk() (*int32, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *Filecreateresponse) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given int32 and assigns it to the Mtime field.
func (o *Filecreateresponse) SetMtime(v int32) {
	o.Mtime = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *Filecreateresponse) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *Filecreateresponse) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *Filecreateresponse) SetPath(v string) {
	o.Path = &v
}

// GetServerFilename returns the ServerFilename field value if set, zero value otherwise.
func (o *Filecreateresponse) GetServerFilename() string {
	if o == nil || o.ServerFilename == nil {
		var ret string
		return ret
	}
	return *o.ServerFilename
}

// GetServerFilenameOk returns a tuple with the ServerFilename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetServerFilenameOk() (*string, bool) {
	if o == nil || o.ServerFilename == nil {
		return nil, false
	}
	return o.ServerFilename, true
}

// HasServerFilename returns a boolean if a field has been set.
func (o *Filecreateresponse) HasServerFilename() bool {
	if o != nil && o.ServerFilename != nil {
		return true
	}

	return false
}

// SetServerFilename gets a reference to the given string and assigns it to the ServerFilename field.
func (o *Filecreateresponse) SetServerFilename(v string) {
	o.ServerFilename = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Filecreateresponse) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Filecreateresponse) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *Filecreateresponse) SetSize(v int32) {
	o.Size = &v
}

// GetErrno returns the Errno field value if set, zero value otherwise.
func (o *Filecreateresponse) GetErrno() int32 {
	if o == nil || o.Errno == nil {
		var ret int32
		return ret
	}
	return *o.Errno
}

// GetErrnoOk returns a tuple with the Errno field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetErrnoOk() (*int32, bool) {
	if o == nil || o.Errno == nil {
		return nil, false
	}
	return o.Errno, true
}

// HasErrno returns a boolean if a field has been set.
func (o *Filecreateresponse) HasErrno() bool {
	if o != nil && o.Errno != nil {
		return true
	}

	return false
}

// SetErrno gets a reference to the given int32 and assigns it to the Errno field.
func (o *Filecreateresponse) SetErrno(v int32) {
	o.Errno = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Filecreateresponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Filecreateresponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Filecreateresponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Filecreateresponse) SetName(v string) {
	o.Name = &v
}

func (o Filecreateresponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Ctime != nil {
		toSerialize["ctime"] = o.Ctime
	}
	if o.FromType != nil {
		toSerialize["from_type"] = o.FromType
	}
	if o.FsId != nil {
		toSerialize["fs_id"] = o.FsId
	}
	if o.Isdir != nil {
		toSerialize["isdir"] = o.Isdir
	}
	if o.Md5 != nil {
		toSerialize["md5"] = o.Md5
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.ServerFilename != nil {
		toSerialize["server_filename"] = o.ServerFilename
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Errno != nil {
		toSerialize["errno"] = o.Errno
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFilecreateresponse struct {
	value *Filecreateresponse
	isSet bool
}

func (v NullableFilecreateresponse) Get() *Filecreateresponse {
	return v.value
}

func (v *NullableFilecreateresponse) Set(val *Filecreateresponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFilecreateresponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFilecreateresponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilecreateresponse(val *Filecreateresponse) *NullableFilecreateresponse {
	return &NullableFilecreateresponse{value: val, isSet: true}
}

func (v NullableFilecreateresponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilecreateresponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
